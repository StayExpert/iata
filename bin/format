#!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var debug = require('debug')('StayExpert:IATA');
var csvPath = path.resolve(__dirname, '../csv');
var parser = require('csv-parse');
var type = process.argv.slice(2);
var distPath = path.resolve(__dirname, '../dist');

format(type[0]);

function format(type) {
  if (['airlines', 'airports'].indexOf(type) === -1)
    throw new Error('Type not supported.');

  debug('Start formating type %s', type);

  var results = [];
  var options = {}
  options.delimiter = ',';

  var parse = parser(options, function(err, arr) {
    if (err)
      console.error(err)

    arr.forEach(function(item, index) {
      if (index === 0)
        return;

      var ret = {};
      if (type === 'airlines') {
        ret.code = item[0]
        ret.nation = item[item.length - 1];
        ret.name = splitName(item[1]);
      }

      results.push(ret);
    });

    debug('Formating done, writed %s', distPath + '/' + type + '.json');
    fs.writeFileSync(distPath + '/' + type + '.json', JSON.stringify(results));
  });

  fs
    .createReadStream(csvPath + '/' + type + '.csv')
    .pipe(parse);
}

function splitName(nameStr) {
  if (nameStr.indexOf('|') === -1)
    return { en: nameStr };

  var order = ['en', 'zh-cn'];
  var names = nameStr.split('|');
  var ret = {};

  names.forEach(function(item, index){
    ret[order[index]] = item;
  });

  return ret;
}